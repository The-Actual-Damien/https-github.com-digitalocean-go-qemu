{{- $enum := . -}}

// {{ .Name }} -> {{ .Name.Go }} (enum)

type {{ $enum.Name.Go }} int

const (
{{- range $i, $v := $enum.Values }}
  {{- if eq $i 0 }}
    {{ $enum.Name.Go }}{{ $v.Go }} {{ $enum.Name.Go }} = iota
  {{- else }}
    {{ $enum.Name.Go }}{{ $v.Go }}
  {{- end }}
{{- end }}
)

func (e {{ $enum.Name.Go }}) MarshalJSON() ([]byte, error) {
     switch e {
     {{- range $enum.Values }}
     case {{ $enum.Name.Go }}{{ .Go }}:
          return json.Marshal("{{ . }}")
     {{- end }}
     default:
          return nil, fmt.Errorf("unknown enum value %q for {{ $enum.Name.Go }}", e)
     }
}

func (e *{{ $enum.Name.Go }}) UnmarshalJSON(bs []byte) error {
     var s string
     if err := json.Unmarshal(bs, &s); err != nil {
          return err
     }
     switch s {
     {{- range $enum.Values }}
     case "{{ . }}":
          *e = {{ $enum.Name.Go }}{{ .Go }}
     {{- end }}
     default:
          return fmt.Errorf("unknown enum value %q for {{ $enum.Name.Go }}", s)
     }
     return nil
}
